name: Build & Publish Release APK
on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: [self-hosted]
    steps:
      - name: checkout code
        uses: actions/checkout@v2    
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
                  ~/gradle/wrapper  
      - name: setup-cache            
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - name: Make Gradle executable
        run: chmod +x ./gradlew
      - run: ./gradlew build --no-daemon            

      - name: Build Release APK
        run: ./gradlew assembleRelease
      - name: Upload artifact Release APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app/build/outputs/apk/release/*.apk
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: .
      - name: Check if tag is a prerelease
        id: check-tag
        run: |
          if [[ $GITHUB_REF == *"-alpha"* || $GITHUB_REF == *"-beta"* || $GITHUB_REF == *"-rc"* ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ steps.check-tag.outputs.prerelease }}  # Auto-set based on tag
          tag_name: ${{ github.ref_name }}  # Use the pushed tag
          name: Release ${{ github.ref_name }}
          files: app/build/outputs/apk/release/*.apk

